##
{{- if .Values.stdWeb }}
{{- if and .Values.global.manifests (hasKey .Values.global "manifests")}}
{{- range .Values.stdWeb.di.pages }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" $ }}-{{ .name }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    {{- if .commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .commonAnnotations .service.annotations }}
  annotations:
    {{- if .commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .commonAnnotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .service.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .service.annotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" $ | nindent 6 }}
  {{- if .deployment.updateStrategy }}
  strategy: {{- toYaml .deployment.updateStrategy | nindent 4 }}
  {{- end }}
  replicas: {{ .deployment.replicaCount }}
  template:
    metadata:
      {{- if .deployment.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .deployment.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" $ | nindent 8 }}
        app.kubernetes.io/component: std-web
        {{- if .deployment.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .deployment.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{ include "common.images.pullSecrets" (dict "images" (list .deployment.image) "global" .deployment.global) }}
      serviceAccountName: {{ default ( include "common.names.fullname" $ ) .serviceAccount.name }}-{{ .name }}
      {{- if .deployment.podSecurityContext.enabled }}
      securityContext: {{- omit .deployment.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .deployment.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .deployment.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .deployment.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .deployment.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .deployment.nodeAffinityPreset.type "key" .deployment.nodeAffinityPreset.key "values" .deployment.nodeAffinityPreset) | nindent 10 }}
      {{- end }}
      {{- if .deployment.schedulerName }}
      schedulerName: {{ .deployment.schedulerName }}
      {{- end }}
      {{- if .deployment.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .deployment.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .deployment.priorityClassName | quote }}
      {{- if .deployment.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .deployment.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .deployment.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .deployment.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .deployment.hostAliases }}
      # yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .deployment.hostAliases "context" $) | nindent 8 }}
      # yamllint enable rule:indentation
      {{- end }}
      containers:
        - name: {{ include "common.names.fullname" $ }}
          image: {{ include "common.images.image" (dict "imageRoot" .deployment.image "global" .deployment.global) }}
          imagePullPolicy: {{ .deployment.image.pullPolicy | quote }}
          {{- if .deployment.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .deployment.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .deployment.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .deployment.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .deployment.containerSecurityContext.enabled }}
          securityContext: {{- omit .deployment.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if .deployment.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .deployment.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .deployment.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .deployment.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .deployment.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .deployment.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .deployment.containerPorts.http }}
          {{- if .deployment.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .deployment.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .deployment.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .deployment.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .deployment.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .deployment.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .deployment.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .deployment.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .deployment.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .deployment.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .deployment.resources }}
          resources: {{- toYaml .deployment.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: std-web-data
              mountPath: /bitnami/std-web
            {{- if .deployment.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .deployment.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .deployment.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .deployment.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: std-web-data
          {{- if .deployment.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .deployment.persistence.existingClaim | default (print (include "common.names.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .deployment.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .deployment.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
---
{{ end -}}
{{- end }}
{{- end }}