##
{{- if .Values.stdWeb }}
{{- if and .Values.global.manifests (hasKey .Values.global "manifests")}}
{{- range .Values.stdWeb.di.pages }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" $ }}-{{ .name }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels: {{- include "common.labels.matchLabels" $ | nindent 4 }}
    app.kubernetes.io/component: dependency-injection
    app.kubernetes.io/part-of: rdbox.std-web
    app.kubernetes.io/managed-by: rdbox
    rdbox.local/format: v1beta1
    rdbox.local/chart: {{ $.Chart.Version }}
    {{- if .commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .commonAnnotations .service.annotations }}
  annotations:
    {{- if .commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .commonAnnotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .service.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .service.annotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  type: {{ .service.type }}
  {{- if .service.sessionAffinity }}
  sessionAffinity: {{ .service.sessionAffinity }}
  {{- end }}
  {{- if .service.sessionAffinityConfig }}
  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .service.sessionAffinityConfig "context" $) | nindent 4 }}
  {{- end }}
  {{- if and .service.clusterIP (eq .service.type "ClusterIP") }}
  clusterIP: {{ .service.clusterIP }}
  {{- end }}
  {{- if (and (eq .service.type "LoadBalancer") (not (empty .service.loadBalancerIP))) }}
  loadBalancerIP: {{ .service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .service.type "LoadBalancer") .service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{- toYaml .service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if or (eq .service.type "LoadBalancer") (eq .service.type "NodePort") }}
  externalTrafficPolicy: {{ .service.externalTrafficPolicy | quote }}
  {{- end }}
  ports:
    - name: http
      port: {{ .service.ports.http }}
      targetPort: http
      {{- if and (or (eq .service.type "NodePort") (eq .service.type "LoadBalancer")) (not (empty .service.nodePorts.http)) }}
      nodePort: {{ .service.nodePorts.http }}
      {{- else if eq .service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    {{- if .service.extraPorts }}
    {{- include "common.tplvalues.render" (dict "value" .service.extraPorts "context" $) | nindent 4 }}
    {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "common.names.fullname" $ }}-{{ .name }}
    app.kubernetes.io/instance: std-web-{{ .name }}
---
{{ end -}}
{{- end }}
{{- end }}