##
{{- if .Values.ambassadorAdmin }}
{{- if and .Values.global.manifests (hasKey .Values.global "manifests")}}
{{- if .Values.ambassadorAdmin.dynamics.filter }}
{{- if and .Values.ambassadorAdmin.dynamics.filter.create (hasKey .Values.ambassadorAdmin.dynamics.filter "create")}}
apiVersion: getambassador.io/v3alpha1
kind: FilterPolicy
metadata:
  name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}"
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: dependency-injection
    app.kubernetes.io/part-of: datawire.edge-stack
    app.kubernetes.io/managed-by: rdbox
    rdbox.local/format: v1beta1
    rdbox.local/chart: {{ .Chart.Version }}
spec:
  rules:
  - host: "{{ .Values.ambassadorAdmin.dynamics.main.fqdn }}"
    path: "*"
    filters:
    - name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-oauth2"
    - name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-jwt-impersonate"
    - name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-jwt-dummy"
      ifRequestHeader:
        name: "Impersonate-Group"
        value: "{{ .Values.ambassadorAdmin.dynamics.filter.allowedGroup }}"
      onAllow: "break"
    - name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-jwt-dummy"
      ifRequestHeader:
        name: "Impersonate-Group"
      onDeny: "break"
      arguments:
        scope:
          - "deny"
{{- end }}
{{- end }}
{{- end }}
{{- end }}