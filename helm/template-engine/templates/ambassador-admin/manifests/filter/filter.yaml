##
{{- if .Values.ambassadorAdmin }}
{{- if and .Values.global.manifests (hasKey .Values.global "manifests")}}
{{- if .Values.ambassadorAdmin.dynamics.filter }}
{{- if and .Values.ambassadorAdmin.dynamics.filter.create (hasKey .Values.ambassadorAdmin.dynamics.filter "create")}}
apiVersion: getambassador.io/v3alpha1
kind: Filter
metadata:
  name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-oauth2"
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: dependency-injection
    app.kubernetes.io/part-of: datawire.edge-stack
    app.kubernetes.io/managed-by: rdbox
    rdbox.local/format: v1beta1
    rdbox.local/chart: {{ .Chart.Version }}
spec:
  OAuth2:
    authorizationURL: "{{ .Values.ambassadorAdmin.dynamics.filter.authorizationURL }}"
    clientID: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}" ## OAuth2 client from your IdP
    secret: "{{ .Values.ambassadorAdmin.dynamics.filter.secret }}" ## Secret used to access OAuth2 client
    protectedOrigins:
    - origin: https://{{ .Values.ambassadorAdmin.dynamics.main.fqdn }}/.ambassador/oauth2/redirection-endpoint
---
apiVersion: getambassador.io/v3alpha1
kind: Filter
metadata:
  name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-jwt-impersonate"
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: dependency-injection
    app.kubernetes.io/part-of: datawire.edge-stack
    app.kubernetes.io/managed-by: rdbox
    rdbox.local/format: v1beta1
    rdbox.local/chart: {{ .Chart.Version }}
spec:
  JWT:
    jwksURI: {{ .Values.ambassadorAdmin.dynamics.filter.jwksUri }}
    injectRequestHeaders:
    - name: "Impersonate-User"
      value: {{ printf "{{ .token.Claims.preferred_username }}" | quote }}
    - name: "Impersonate-Group"
      value: {{ printf "{{ index .token.Claims.groups 0 }}" | quote }}
    - name: "X-Rdbox-Impersonate-Group"
      value: {{ printf "{{range .token.Claims.groups}}{{ . }};{{end}}" | quote }}
---
apiVersion: getambassador.io/v3alpha1
kind: Filter
metadata:
  name: "{{ .Values.ambassadorAdmin.dynamics.main.hostname }}-jwt-dummy"
  namespace: {{ template "common.names.namespace" . }}
  labels: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: dependency-injection
    app.kubernetes.io/part-of: datawire.edge-stack
    app.kubernetes.io/managed-by: rdbox
    rdbox.local/format: v1beta1
    rdbox.local/chart: {{ .Chart.Version }}
spec:
  JWT:
    jwksURI: {{ .Values.ambassadorAdmin.dynamics.filter.jwksUri }}
    errorResponse:
      bodyTemplate: "permission denied"
{{- end }}
{{- end }}
{{- end }}
{{- end }}