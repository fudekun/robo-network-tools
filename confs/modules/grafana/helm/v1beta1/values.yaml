## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @section Grafana Operator parameters
##

## This all configuration for the Grafana Operator.
## Ref: https://github.com/integr8ly/grafana-operator/blob/master/documentation/README.md
## Constants it is using for creating instances:
## Ref: https://github.com/integr8ly/grafana-operator/blob/master/pkg/controller/model/constants.go
##
operator:
  ## @param operator.enabled Enable the deployment of the Grafana Operator
  ##
  enabled: true
  ## The options are mutually exclusive.
  ##
  scanAllNamespaces: true

## @section Grafana parameters
##

grafana:
  ## @param grafana.enabled Enabled the deployment of the Grafana CRD object into the cluster
  ##
  enabled: true
  ## Enable persistence using Persistent Volume Claims
  ## Ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param grafana.persistence.enabled Enable persistent storage for the grafana deployment
    ## NOTE: In order to avoid deployment failure due to multi-attach of the same volume,
    ## you might also want to set `grafana.updateStrategy` to Recreate.
    ## More information can be found here: https://github.com/grafana-operator/grafana-operator/issues/453
    ##
    enabled: true
    ## @param grafana.persistence.storageClass Define the storageClass for the persistent storage if not defined default is used
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "standard"
    ## @param grafana.persistence.accessModes Define the accessModes for the persistent storage
    ##
    accessModes:
      - ReadWriteOnce
    ## @param grafana.persistence.annotations Add annotations to the persistent volume
    ##
    annotations: {}
    ## @param grafana.persistence.size Define the size of the PersistentVolumeClaim to request for
    ##
    size: 8Gi
  ## @param grafana.config [object] grafana.ini configuration for the instance for this to configure please look at upstream docs
  ## This is the configuration from the grafana pod itself. Every toml section is a root key
  ## Ref: https://grafana.com/docs/grafana/latest/administration/configuration/
  ##
  config:
    log:
      level: info
    server:
      root_url: __URL__
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      scopes: openid profile groups email roles
      client_id: __ID__
      client_secret: __SECRET__
      auth_url: __URL__
      token_url: __URL__
      api_url: __URL__
      tls_client_ca: __FILE__
      email_attribute_path: preferred_username
      role_attribute_path: __ROLE__
  ## @param grafana.secrets Extra secrets to mount into the grafana pod
  ## Ref: https://github.com/integr8ly/grafana-operator/blob/master/documentation/extra_files.md
  ## e.g:
  ## secrets:
  ##   - myCustomSecret
  ##
  secrets:
    - __SECRET__